@import url('https://fonts.googleapis.com/css2?family=Rubik+Mono+One&display=swap');


/* ----- Universal Styling ----- */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}
html {
  font-size: 62.5%;
}
body {
  box-sizing: border-box;  
  display: flex;
  flex-direction: column;
  align-items: center;

  font-size: 1.6rem;
  color: #063250;
  background-color: rgb(75, 177, 245);
  font-family: "Rubik Mono One";
}


/* Main Containers Styling */
.main-container {

  display: flex;
  flex-direction: column;
  /* justify-content: center; */
  align-items: center;
}
.grid-container {
  display: flex;
  flex-wrap: wrap;
  background-color: rgb(200, 205, 199);
  border: 4px solid black;
  border-radius: 5px;
  width: 85vw;
  height: 85vw;
  user-select: none;
}
.pixel {
  border: 1px solid black;
}


.body-item {
  margin: 25px;
}

h1 {
  font-size: 44px;
}

/* ----- MENU STYLING ------ */
.menu {
  width: 80vw;
  display: flex;
  align-items: center;
  justify-content: space-around;
}
.menu-item { 
  font-size: 14px;
  text-align: center;
}

.color-select {
  display: flex;
  align-items: center;
}


/* ----- Pen Slider Styling ----- */
.slidecontainer {
  /* width: ; */
  font-size: 16px;
}
.slider {
  -webkit-appearance: none; 
  appearance: none;
  width: 100%;
  height: 4px; 
  background: #000000; 
  outline: none; 
  opacity: 0.7; 
  -webkit-transition: .2s; 
  transition: opacity .2s;
}
.slider:hover {
  opacity: 1; 
}
.slider::-webkit-slider-thumb {
  -webkit-appearance: none; 
  appearance: none;
  width: 15px; 
  height: 15px; 
  border-radius: 50%;
  background: #04AA6D; 
  cursor: pointer; 
}
.slider::-moz-range-thumb {
  width: 25px; 
  height: 25px; 
  background: #04AA6D; 
  cursor: pointer; 
}


/* Color Swatch Styling */
.colorPicker::-webkit-color-swatch {
  border-radius: 10%;
}
.colorPicker {
  background: none;
  border: none;
  height: 25px;
  width: 25px;
}


/* Button Styling */
.menu-btn {
  height: 50px;
  background-image: linear-gradient(-180deg, #37AEE2 0%, #1E96C8 100%);
  border-radius: .5rem;
  box-sizing: border-box;
  color: #FFFFFF;
  display: flex;
  font-size: 16px;
  align-items: center;
  justify-content: center;
  padding: 1rem 1rem;
  text-decoration: none;
  border: 0;
  cursor: pointer;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
}
.menu-btn:hover {
  background-image: linear-gradient(-180deg, #1D95C9 0%, #17759C 100%);
}
@media (min-width: 768px) {
  .menu-btn {
    padding: 1rem 2rem;
  }
}


/* Footer Styling */
footer {
  width: 70vw;
  font-size: 10px;
  display: flex;
  justify-content: space-between;
}


/* ----- Main Media Queries ----- */
@media (min-width: 1000px) {
  .grid-container {
    width: 800px;
    height: 800px;
  }
}



/* ------ EXPERIMENTAL MODE ------ */

#exp-h1 {
  margin: 25px;
}

#exp-h3 {
  margin: 25px;
}


#exp-body {
  background-color: rgb(22, 18, 18);
  color: #eaf8f3;
  text-align: center;
}

.experimental-container {
  display: flex;
  flex-direction: column;
  align-items: center;
}




:root {
  /* generic */
  --gutterSm: 0.4rem;
  --gutterMd: 0.8rem;
  --gutterLg: 1.6rem;
  --gutterXl: 2.4rem;
  --gutterXx: 7.2rem;
  --colorPrimary400: #7e57c2;
  --colorPrimary600: #5e35b1;
  --colorPrimary800: #4527a0;
  --fontFamily: "Dosis", sans-serif;
  --fontSizeSm: 1.2rem;
  --fontSizeMd: 1.6rem;
  --fontSizeLg: 2.1rem;
  --fontSizeXl: 2.8rem;
  --fontSizeXx: 3.6rem;
  --lineHeightSm: 1.1;
  --lineHeightMd: 1.8;
  --transitionDuration: 300ms;
  --transitionTF: cubic-bezier(0.645, 0.045, 0.355, 1);
  
  /* floated labels */
  --inputPaddingV: var(--gutterMd);
  --inputPaddingH: var(--gutterLg);
  --inputFontSize: var(--fontSizeLg);
  --inputLineHeight: var(--lineHeightMd);
  --labelScaleFactor: 0.8;
  --labelDefaultPosY: 50%;
  --labelTransformedPosY: calc(
    (var(--labelDefaultPosY)) - 
    (var(--inputPaddingV) * var(--labelScaleFactor)) - 
    (var(--inputFontSize) * var(--inputLineHeight))
  );
  --inputTransitionDuration: var(--transitionDuration);
  --inputTransitionTF: var(--transitionTF);
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  font-size: 10px;
}

/* body {
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  width: 100vw;
  height: 100vh;
  color: #455A64;
  background-color: #7E57C2;
  font-family: var(--fontFamily);
  font-size: var(--fontSizeMd);
  line-height: var(--lineHeightMd);
} */

.wrapper {
  flex: 0 0 80%;
  max-width: 80%;
  margin-bottom: 50px;
}

.title {
  margin: 40px;
  padding: 0;
  color: #eaf8f3;
  font-size: 24px;
  line-height: 1.1;
  text-align: center;
  text-shadow: -0.1rem 0.1rem 0.2rem #6bc257;
}

.input {
  position: relative;
  color: #0c0d0d;
}


.Input-text {
  display: block;
  margin: 0;
  padding: var(--inputPaddingV) var(--inputPaddingH);
  color: inherit;
  width: 100%;
  font-family: inherit;
  font-size: 2.1rem;
  font-weight: inherit;
  line-height: var(--inputLineHeight);
  border: none;
  border-radius: 0.4rem;
  transition: box-shadow var(--transitionDuration);
}

.Input-text::placeholder {
  color: #d0dadf;
}

.Input-text:focus {
  outline: none;
  box-shadow: 0.2rem 0.8rem 1.6rem #6bc257;
}

.Input-label {
  display: block;
  position: absolute;
  bottom: 50%;
  left: 1rem;
  color: #eaf8f3;
  font-family: inherit;
  font-size: 12px;
  font-weight: inherit;
  line-height: var(--inputLineHeight);
  opacity: 0;
  transform: 
    translate3d(0, var(--labelDefaultPosY), 0)
    scale(1);
  transform-origin: 0 0;
  transition:
    opacity var(--inputTransitionDuration) var(--inputTransitionTF),
    transform var(--inputTransitionDuration) var(--inputTransitionTF),
    visibility 0ms var(--inputTransitionDuration) var(--inputTransitionTF),
    z-index 0ms var(--inputTransitionDuration) var(--inputTransitionTF);
}

.Input-text:placeholder-shown + .Input-label {
  visibility: hidden;
  z-index: -1;
}

.Input-text:not(:placeholder-shown) + .Input-label,
.Input-text:focus:not(:placeholder-shown) + .Input-label {
  visibility: visible;
  z-index: 1;
  opacity: 1;
  transform:
    translate3d(0, var(--labelTransformedPosY), 0)
    scale(var(--labelScaleFactor));
  transition:
    transform var(--inputTransitionDuration),
    visibility 0ms,
    z-index 0ms;
}